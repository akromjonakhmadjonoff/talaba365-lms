{
  "version": "v1",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "nest build",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "generate:control": "prisma generate --schema=prisma/control/schema.prisma",
    "migrate:control": "prisma migrate dev --name init --schema=prisma/control/schema.prisma",
    "deploy:control": "prisma migrate deploy --schema=prisma/control/schema.prisma",
    "studio:control": "prisma studio --schema=prisma/control/schema.prisma",
    "reset:control": "prisma migrate reset --schema=prisma/control/schema.prisma",

    "generate:shared": "prisma generate --schema=prisma/shared/schema.prisma",
    "migrate:shared": "prisma migrate dev --name init --schema=prisma/shared/schema.prisma",
    "deploy:shared": "prisma migrate deploy --schema=prisma/shared/schema.prisma",
    "studio:shared": "prisma studio --schema=prisma/shared/schema.prisma",
    "reset:shared": "prisma migrate reset --schema=prisma/shared/schema.prisma",

    "generate:tenant": "prisma generate --schema=prisma/tenant/schema.prisma",
    "migrate:tenant": "prisma migrate dev --name init --schema=prisma/tenant/schema.prisma",
    "deploy:tenant": "prisma migrate deploy --schema=prisma/tenant/schema.prisma",
    "studio:tenant": "prisma studio --schema=prisma/tenant/schema.prisma",
    "reset:tenant": "prisma migrate reset --schema=prisma/tenant/schema.prisma",

    "generate:all": "yarn generate:control && yarn generate:shared && yarn generate:tenant",
    "migrate:all": "yarn migrate:control && yarn migrate:shared && yarn migrate:tenant",
    "deploy:all": "yarn deploy:control && yarn deploy:shared && yarn deploy:tenant",
    "studio:all": "yarn studio:control && yarn studio:shared && yarn studio:tenant",
    "reset:all": "yarn reset:control && yarn reset:shared && yarn reset:tenant"
  },
  "dependencies": {
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.1.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/serve-static": "^5.0.3",
    "@nestjs/swagger": "^11.2.0",
    "@prisma/client": "^6.7.0",
    "@types/bcrypt": "^5.0.2",
    "bcrypt": "^6.0.0",
    "cache-manager": "^6.4.3",
    "cache-manager-ioredis": "^2.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "express-formidable": "^1.2.0",
    "express-session": "^1.18.1",
    "ioredis": "^5.6.1",
    "nestjs-i18n": "^10.5.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "latest",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "dotenv-cli": "^7.2.1",
    "eslint": "^8.42.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^6.7.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "tslib": "^2.5.0",
    "typescript": "^5.0.4"
  },
  "name": "lms_backend",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
